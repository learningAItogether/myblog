{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/vexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/vexo/source/fonts/SourceSansPro.ttf","path":"fonts/SourceSansPro.ttf","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/qrious.js","path":"js/qrious.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/plugins/gitment.css","path":"css/plugins/gitment.css","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/alipay.jpg","path":"css/images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/catalog.png","path":"css/images/catalog.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/error_icon.png","path":"css/images/error_icon.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/escheres.png","path":"css/images/escheres.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/ga.png","path":"css/images/ga.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/icp.png","path":"css/images/icp.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/logo.png","path":"css/images/logo.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/logo1.png","path":"css/images/logo1.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/menu.png","path":"css/images/menu.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/top.png","path":"css/images/top.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/wechat.jpg","path":"css/images/wechat.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/Git & GitHub使用指南.md","hash":"3621ce2c0807bd42141fbdaf1b40a337d4654e3a","modified":1650904415774},{"_id":"source/_posts/机器学习教学安排.md","hash":"8a3d9d3e1c524fbf00d2025ceb5388cd51420108","modified":1650987841751},{"_id":"source/project/index.md","hash":"9e533e682312e2dc14844baa0c2576f4ee11169a","modified":1650952945459},{"_id":"source/_posts/NumPy 百题大冲关｜学习版.md","hash":"f1aa5dcb3cbc899ac1ffe11358160ed9c3cb8614","modified":1650957043208},{"_id":"source/series/index.md","hash":"8ac9d88f67a2709fbbc6732bee079d7e159af7fa","modified":1650952945464},{"_id":"source/tags/index.md","hash":"ae19acf22f855d3acfd9f58d28aebd1bd8ba4def","modified":1650952945470},{"_id":"source/about/index.md","hash":"54861b4ba18c5d09a6b0d92429cabd617023caa0","modified":1650952945454},{"_id":"source/_posts/.ipynb_checkpoints/NumPy 百题大冲关｜学习版-checkpoint.ipynb","hash":"a3059366ff7cd8f8bd2a50c49290cc0409613521","modified":1650934821235},{"_id":"themes/vexo/.travis.yml","hash":"b3ac9cda9d6000736519c78272ea03733f70bbfc","modified":1650937201411},{"_id":"themes/vexo/.gitignore","hash":"99e5bb4cc2a0b34f697ecc7c146f9d10d0a986e8","modified":1650937201407},{"_id":"themes/vexo/_config.yml","hash":"52fa652e0c7da1d446b0d1c96050f5bf564fb772","modified":1650968863842},{"_id":"themes/vexo/LICENSE","hash":"96a961acb8766182dca9e15280b37ee18156cee9","modified":1650937201413},{"_id":"themes/vexo/lint.sh","hash":"2f3d1e5bab055677cab305b34220ba090a59f49e","modified":1650937201479},{"_id":"themes/vexo/package.json","hash":"dcb28dbbd31406b64ee6215cc9139bbe4b5c71cc","modified":1650937201479},{"_id":"themes/vexo/README.md","hash":"316cd013cb664f53c959ff123fdcd3ea3cad99f7","modified":1650955769825},{"_id":"themes/vexo/layout/about.ejs","hash":"9c796dc3a20ab7a2c126ba64efc4f7704b7b38be","modified":1650937201463},{"_id":"themes/vexo/layout/archive.ejs","hash":"c0024957ecd8b1a7ac0e1e61f73cca94abf53f24","modified":1650937201466},{"_id":"themes/vexo/layout/layout.ejs","hash":"f2663b2d38d506488954de4ee88437f7ecd8bef6","modified":1650937201468},{"_id":"themes/vexo/layout/index.ejs","hash":"368741bd99b47547cd2aa9ae0b86dce433963b51","modified":1650937201467},{"_id":"themes/vexo/layout/page.ejs","hash":"600121d2fdaf7ae0c18041dce256ba565f65eb9e","modified":1650972010126},{"_id":"themes/vexo/layout/series.ejs","hash":"d00b7752459891085429ca08cbe1b397ac0da675","modified":1650937201472},{"_id":"themes/vexo/layout/project.ejs","hash":"949871c471c580929758ca91a487b7ded27d72c8","modified":1650937201472},{"_id":"themes/vexo/layout/_third-party/google_analytics.ejs","hash":"40abea6ccb8212c8f2c1150566859f56b81f4657","modified":1650937201454},{"_id":"themes/vexo/layout/_third-party/localsearch.ejs","hash":"a77e2cbfbf449ac78d0250971e26a9d7ed7fff88","modified":1650937201458},{"_id":"themes/vexo/layout/tags.ejs","hash":"ec16bf06ab299e50463ac0e5971f96a29d44b620","modified":1650937201477},{"_id":"themes/vexo/layout/_partial/archive.ejs","hash":"99cf513b3ffdd800672cf7171cd60279fedd8576","modified":1650937201432},{"_id":"themes/vexo/layout/_third-party/mathjax.ejs","hash":"82a5df48b19ff02600c9deecd26f13b14645854d","modified":1650937201458},{"_id":"themes/vexo/layout/_partial/footer.ejs","hash":"98db11b8691d3fc6af8cdb1d0436bc39423eacec","modified":1650969579197},{"_id":"themes/vexo/layout/_partial/catalog.ejs","hash":"388691959db5272d70995c9536c26135e07ec33d","modified":1650937201437},{"_id":"themes/vexo/layout/_partial/head.ejs","hash":"cdedbdb23f09923879914bd0aba5035e2a5c873a","modified":1650937201439},{"_id":"themes/vexo/layout/_partial/header.ejs","hash":"2233644b6ee6d004e3b5b5c0db53e2a82a72ee1e","modified":1650937201439},{"_id":"themes/vexo/layout/_partial/pager.ejs","hash":"b56ebe2bff1223b76865c4a43f2a0c28c08e9e7e","modified":1650937201443},{"_id":"themes/vexo/layout/_partial/nav.ejs","hash":"d9845616016b20bf6604438600b34e0dcde0e135","modified":1650937201443},{"_id":"themes/vexo/layout/_partial/tag.ejs","hash":"ff8f66ad350a0da1b7ef03840f70b637024e028c","modified":1650937201450},{"_id":"themes/vexo/layout/_partial/top.ejs","hash":"cb8abc06fa14d3ccc085629bbff0333d2f7aef37","modified":1650937201454},{"_id":"themes/vexo/_source/about/index.md","hash":"54861b4ba18c5d09a6b0d92429cabd617023caa0","modified":1650937201420},{"_id":"themes/vexo/_source/project/index.md","hash":"9e533e682312e2dc14844baa0c2576f4ee11169a","modified":1650937201425},{"_id":"themes/vexo/_source/series/index.md","hash":"8ac9d88f67a2709fbbc6732bee079d7e159af7fa","modified":1650937201427},{"_id":"themes/vexo/_source/tags/index.md","hash":"ae19acf22f855d3acfd9f58d28aebd1bd8ba4def","modified":1650937201431},{"_id":"themes/vexo/source/css/_config.styl","hash":"b22710203165c07b33a50c60c53515b42e64b8c1","modified":1650937201484},{"_id":"themes/vexo/source/css/style.styl","hash":"f84d44dc0e85ad4530c0aa9b127cbe21a90643e6","modified":1650937201536},{"_id":"themes/vexo/layout/_partial/search/localsearch_button.ejs","hash":"89c2029f3c512fa8fcf4c9ffa1f45b7622dd397b","modified":1650937201449},{"_id":"themes/vexo/source/js/script.js","hash":"621f8455e117ce6701308df6c775c36b751f98b2","modified":1650937201561},{"_id":"themes/vexo/source/js/local-search.js","hash":"b998ea018cb96a3eb1b5221f082d39d40eab4328","modified":1650937201556},{"_id":"themes/vexo/source/js/qrious.js","hash":"8017310ee572950086944a4c26e2017522add8e9","modified":1650937201556},{"_id":"themes/vexo/layout/_partial/search/localsearch_view.ejs","hash":"b12b84797dbb92f08c80b1e063896bf31e560284","modified":1650937201450},{"_id":"themes/vexo/source/css/_partial/about.styl","hash":"c7cdcf620cdb70025440aa4648e6f83247f3f9d4","modified":1650937201486},{"_id":"themes/vexo/source/css/_partial/catalog.styl","hash":"575199a6b99026620fe7a0e2b6d463cfedb0066a","modified":1650937201490},{"_id":"themes/vexo/source/css/_partial/header.styl","hash":"01774302143b68d38d0b2a44ada574a50e5e5d6f","modified":1650937201494},{"_id":"themes/vexo/source/css/_partial/categories.styl","hash":"0f37d9cf87cc7200d6dde8cd67a8fb010883ea4b","modified":1650937201493},{"_id":"themes/vexo/source/css/_partial/footer.styl","hash":"35fd5f7e4583afb2ec5deb0dba0ebf95aa8862e1","modified":1650937201494},{"_id":"themes/vexo/source/css/_partial/archive.styl","hash":"5150e6ed6c9b0613da014304048650659412fd33","modified":1650937201486},{"_id":"themes/vexo/source/css/_partial/markdown.styl","hash":"a234d60d5b4b66d128fd93a11dce35d8150d0efd","modified":1650937201499},{"_id":"themes/vexo/source/css/_partial/nav.styl","hash":"566e4b18b3e0bcf7cb9c84462c8a1b5c8bcfab06","modified":1650937201501},{"_id":"themes/vexo/source/css/_partial/pager.styl","hash":"506c59380c56f03b9ddd08fd18cfaaf17888858a","modified":1650937201502},{"_id":"themes/vexo/source/css/_partial/project.styl","hash":"a4dc0b4bdf1b5e8fcd3a4c6f4d9b2ed8c06e72ba","modified":1650937201504},{"_id":"themes/vexo/source/css/_partial/tags.styl","hash":"14cd7fbc4309ed2c470746497af14d79e62b6641","modified":1650937201504},{"_id":"themes/vexo/source/css/_partial/search.styl","hash":"d6e1c1f7161d0c544fafd4e6c585177686591c64","modified":1650937201504},{"_id":"themes/vexo/source/css/plugins/gitment.css","hash":"1190f8b5c9962b96c3d3631b15ab8680faa9ddef","modified":1650937201536},{"_id":"themes/vexo/source/css/images/catalog.png","hash":"541d20dd600fc2c9230329ceb6885d86e6c151dd","modified":1650937201513},{"_id":"themes/vexo/source/css/images/error_icon.png","hash":"efec6e759508dd02e6fa8c4facd9a25a61aae055","modified":1650937201513},{"_id":"themes/vexo/source/css/images/alipay.jpg","hash":"069e3b828b27f81989d9b47bebf04813cab990b2","modified":1650963280297},{"_id":"themes/vexo/source/css/images/escheres.png","hash":"55deece3236dcc2fb44c28dec3e8bacbb7b46542","modified":1650937201518},{"_id":"themes/vexo/source/css/images/ga.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1650937201520},{"_id":"themes/vexo/source/css/images/icp.png","hash":"28a83ac96146b1e0513a6eb68a24a591cd59821c","modified":1650937201520},{"_id":"themes/vexo/source/css/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1650937201525},{"_id":"themes/vexo/source/css/images/logo.png","hash":"3335894f0f5f16b921586c500ff3710fa840b126","modified":1650962190880},{"_id":"themes/vexo/source/css/images/top.png","hash":"611a257907474ca02828319f81b006c1d818bb84","modified":1650937201525},{"_id":"themes/vexo/source/css/images/logo1.png","hash":"718c6e48956249121cf3cca1a22a99f8372a3f0d","modified":1650937201524},{"_id":"themes/vexo/source/css/images/wechat.jpg","hash":"c9f1cb80b010d05e30b72486ad0f0f243c21a79b","modified":1650962661912},{"_id":"themes/vexo/source/fonts/SourceSansPro.ttf","hash":"1e9f0372c269da205fdbac8cf27cb9cf59f6ad45","modified":1650937201547},{"_id":"themes/vexo/source/js/gitment.js","hash":"b15998a45d5f386d30905cfbfbb1658336acbb5b","modified":1650937201555},{"_id":"public/series/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1650987951413},{"_id":"public/project/index.html","hash":"974ece5d457aa91063ae02812164cc6fe88f2ee3","modified":1650987951413},{"_id":"public/tags/index.html","hash":"e944372efa35f9f53bf27403d283be7071bedd60","modified":1650987951413},{"_id":"public/about/index.html","hash":"1b0d2476b5273b0803a61feef44eb4840cb00a48","modified":1650987951413},{"_id":"public/2022/04/26/机器学习教学安排/index.html","hash":"e927fdbaa9d4ead9f9e35ed237dcfd20705abc40","modified":1650987951413},{"_id":"public/archives/index.html","hash":"4af3ee1e9cb530d646427cb985616e675cd1a3d2","modified":1650987951413},{"_id":"public/archives/2022/index.html","hash":"b7507842058e6d6beb6cb9665316a2a9b4405c15","modified":1650987951413},{"_id":"public/archives/2022/04/index.html","hash":"ed31ab5b1b93f3aba4267bfe76bde7e4ff24383c","modified":1650987951413},{"_id":"public/index.html","hash":"343dbc15b75de0af25da66178d0db09a1c4c4a69","modified":1650987951413},{"_id":"public/2022/04/26/NumPy 百题大冲关｜学习版/index.html","hash":"5c634ce5dfcf92f1656deec1b495b93b2aa757e7","modified":1650987951413},{"_id":"public/2022/04/26/Git & GitHub使用指南/index.html","hash":"8c32dce684a9bdc9d7504e61061e5be43342d651","modified":1650987951413},{"_id":"public/css/images/catalog.png","hash":"541d20dd600fc2c9230329ceb6885d86e6c151dd","modified":1650987951413},{"_id":"public/css/images/alipay.jpg","hash":"069e3b828b27f81989d9b47bebf04813cab990b2","modified":1650987951413},{"_id":"public/css/images/error_icon.png","hash":"efec6e759508dd02e6fa8c4facd9a25a61aae055","modified":1650987951413},{"_id":"public/css/images/ga.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1650987951413},{"_id":"public/css/images/escheres.png","hash":"55deece3236dcc2fb44c28dec3e8bacbb7b46542","modified":1650987951413},{"_id":"public/css/images/logo.png","hash":"3335894f0f5f16b921586c500ff3710fa840b126","modified":1650987951413},{"_id":"public/css/images/icp.png","hash":"28a83ac96146b1e0513a6eb68a24a591cd59821c","modified":1650987951413},{"_id":"public/css/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1650987951413},{"_id":"public/css/images/logo1.png","hash":"718c6e48956249121cf3cca1a22a99f8372a3f0d","modified":1650987951413},{"_id":"public/css/images/top.png","hash":"611a257907474ca02828319f81b006c1d818bb84","modified":1650987951413},{"_id":"public/js/script.js","hash":"1e0a395deba4f5ae66a5758590e094d26d777421","modified":1650987951413},{"_id":"public/js/local-search.js","hash":"2d4c35e67f6ae2234a220c2898534d5bcb5245a2","modified":1650987951413},{"_id":"public/css/style.css","hash":"5adfacca2813469f858b0916dbfdeaf7d0f083e9","modified":1650987951413},{"_id":"public/js/qrious.js","hash":"a9271e81e2ac6a692b1c133811afa33f0f3d7dc5","modified":1650987951413},{"_id":"public/css/plugins/gitment.css","hash":"541ff18d7f3542b5663dc6aad06d43e135332b71","modified":1650987951413},{"_id":"public/js/gitment.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1650987951413},{"_id":"public/css/images/wechat.jpg","hash":"c9f1cb80b010d05e30b72486ad0f0f243c21a79b","modified":1650987951413},{"_id":"public/fonts/SourceSansPro.ttf","hash":"1e9f0372c269da205fdbac8cf27cb9cf59f6ad45","modified":1650987951413}],"Category":[],"Data":[],"Page":[{"title":"Project","layout":"project","_content":"","source":"project/index.md","raw":"---\ntitle: Project\nlayout: project\n---\n","date":"2022-04-26T06:02:25.459Z","updated":"2022-04-26T06:02:25.459Z","path":"project/index.html","comments":1,"_id":"cl2gblmgv000018tdhr7yfm2f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\nlayout: tags\n---\n","date":"2022-04-26T06:02:25.470Z","updated":"2022-04-26T06:02:25.470Z","path":"tags/index.html","comments":1,"_id":"cl2gblmhk000218tddlwl5m3w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Series","layout":"series","_content":"","source":"series/index.md","raw":"---\ntitle: Series\nlayout: series\n---\n","date":"2022-04-26T06:02:25.464Z","updated":"2022-04-26T06:02:25.464Z","path":"series/index.html","comments":1,"_id":"cl2gblmid000418tdg7gra7wr","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: About\nlayout: about\n---","date":"2022-04-26T06:02:25.454Z","updated":"2022-04-26T06:02:25.454Z","path":"about/index.html","comments":1,"_id":"cl2gblmj4000618tdbo1t0qvt","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"机器学习教学安排","_content":"\n1. 工具的使用 Anaconda,jupyter notebook等\n\n\n2.  与项目相关的python基础\n\n\n3. 与项目相关的数据分析类基础 matplotlib, pandas, numpy \n\n\n4. 与相关项目机器学习基础，案例模型实践。\n\n\n5. 与项目相关机器学习原理\n\n\n6. 利用卷积神经网络搭建模型\n\n\n7. 部署该项目到演示电脑 / 答疑\n\n\n学习方式：直播＋完成我布置的任务。\n每天认真学习时间大于5个小时，可以达到训练特定的数据集和看懂机器学习类简单论文的能力。\n\n\n200元/节课，\n\n\n100分钟左右/节。\n\n学费：1400","source":"_posts/机器学习教学安排.md","raw":"---\ntitle: 机器学习教学安排\n---\n\n1. 工具的使用 Anaconda,jupyter notebook等\n\n\n2.  与项目相关的python基础\n\n\n3. 与项目相关的数据分析类基础 matplotlib, pandas, numpy \n\n\n4. 与相关项目机器学习基础，案例模型实践。\n\n\n5. 与项目相关机器学习原理\n\n\n6. 利用卷积神经网络搭建模型\n\n\n7. 部署该项目到演示电脑 / 答疑\n\n\n学习方式：直播＋完成我布置的任务。\n每天认真学习时间大于5个小时，可以达到训练特定的数据集和看懂机器学习类简单论文的能力。\n\n\n200元/节课，\n\n\n100分钟左右/节。\n\n学费：1400","slug":"机器学习教学安排","published":1,"date":"2022-04-26T15:18:55.272Z","updated":"2022-04-26T15:44:01.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2gblmh5000118td3fpv8v33","content":"<ol>\n<li>工具的使用 Anaconda,jupyter notebook等</li>\n</ol>\n<ol start=\"2\">\n<li> 与项目相关的python基础</li>\n</ol>\n<ol start=\"3\">\n<li>与项目相关的数据分析类基础 matplotlib, pandas, numpy </li>\n</ol>\n<ol start=\"4\">\n<li>与相关项目机器学习基础，案例模型实践。</li>\n</ol>\n<ol start=\"5\">\n<li>与项目相关机器学习原理</li>\n</ol>\n<ol start=\"6\">\n<li>利用卷积神经网络搭建模型</li>\n</ol>\n<ol start=\"7\">\n<li>部署该项目到演示电脑 / 答疑</li>\n</ol>\n<p>学习方式：直播＋完成我布置的任务。<br>每天认真学习时间大于5个小时，可以达到训练特定的数据集和看懂机器学习类简单论文的能力。</p>\n<p>200元/节课，</p>\n<p>100分钟左右/节。</p>\n<p>学费：1400</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>工具的使用 Anaconda,jupyter notebook等</li>\n</ol>\n<ol start=\"2\">\n<li> 与项目相关的python基础</li>\n</ol>\n<ol start=\"3\">\n<li>与项目相关的数据分析类基础 matplotlib, pandas, numpy </li>\n</ol>\n<ol start=\"4\">\n<li>与相关项目机器学习基础，案例模型实践。</li>\n</ol>\n<ol start=\"5\">\n<li>与项目相关机器学习原理</li>\n</ol>\n<ol start=\"6\">\n<li>利用卷积神经网络搭建模型</li>\n</ol>\n<ol start=\"7\">\n<li>部署该项目到演示电脑 / 答疑</li>\n</ol>\n<p>学习方式：直播＋完成我布置的任务。<br>每天认真学习时间大于5个小时，可以达到训练特定的数据集和看懂机器学习类简单论文的能力。</p>\n<p>200元/节课，</p>\n<p>100分钟左右/节。</p>\n<p>学费：1400</p>\n"},{"title":"Git & GitHub使用指南","_content":"\n---\n\n#### 介绍\n\n**1. Git & GitHub的发展历史**\n\nLinux 之父 Linus 在 1991 年创建开源的 Linux 操作系统之后，Linus 花了十天时间用 C 语言写好了一个开源的版本控制系统（Version Control System），就是著名的 Git。\n\n\n2007 年旧金山三个年轻人觉得 Git 是个好东西，就搞了一个公司名字叫 GitHub，第二年上线了使用 Ruby 编写的同名网站 GitHub，这是一个基于 Git 的免费代码托管网站（有付费服务）\n\nGithub被微软收购\n\n---\n\n### Github Desk简单操作\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. 下载安装Github**\n\nhttps://desktop.github.com/\n\n**2. 注册账号**\n\nhttps://github.com/\n\n**3. 新建项目** \n\n启动Github，菜单栏File，选择 New repository，\n\n填写Name，选择Local path\n\n**4. 文件夹更新项目内容** \n\n提交Summit\n\n**5. 发布项目** \n\n菜单栏New repository，选择Push \n\n---\n\n### Git简单操作\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. Start a project**\n\n登录Github，https://github.com/， 点击Start a project\n\n**2. Create a new repository**\n\n填写Repository name，选择Public/Private， 点击Create Repository\n\n**3. 获取链接**\n\nhttps://github.com/sheldonyue/machineLearning.git\n\n---\n\n**4. 下载安装Git**\n\nhttps://git-scm.com/\n默认设置，一路Next\n\n**5. 检查Git安装**\n\n打开终端Command Prompt，输入git version\n\n**6. 创建项目**\n\ncd 项目路径 \n如：D:\\AI\\03RNN\\AI-Writer-project\n\n**7. 配置Git**\n\ngit config --global user.name 'sheldonyue' \n\ngit config --global user.email 'sheldonyue@sina.com'\n\n**7. 检查配置**\n\ngit config -l\n\n查看最后两行name 和 email\n\n---\n\n**8. 初始化本地仓库**\n\ngit init\n\n**9. 关联远端Git仓库**\n\ngit remote add origin https://github.com/sheldonyue/machineLearning.git\n\n查看最后两行name 和 email\n\n**10. 查看本地项目文件夹变化**\n\ngit status\n\n**11. 更新本地Git项目**\n\ngit add *\n\ngit commit -m \"first commit\"\n\n！注意：必须用双引号\n\n**12. 推送到远端**\n\ngit push -u origin master\n\n说明：推送小于100MB的项目\n\n---\n\n### Git-LFS上传大文件\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. 下载文件**\n\n\n```python\nhttps://git-lfs.github.com/\n```\n\n**2. 安装到git目录下**\n\n\n```python\nC:\\Program Files\\Git\\bin\\Git LFS\n```\n\n**3. 上传大文件**\n\n\n```python\ngit init #创建本地仓库环境\ngit lfs install #安装大文件上传应用\ngit lfs track * #追踪要上传的大文件，*表示路径下的所有文件\ngit add .gitattributes #添加先上传的属性文件(要先上传属性文件，不然有可能失败)\ngit commit -m \"pre\" #添加属性文件上传的说明\ngit remote add origin https://github.com/Youpeng-Zhang/MOP.git #建立本地和Github仓库的链接\ngit push origin master #上传属性文件\ngit add * #添加要上传的大文件，*表示路径下的所有文件\ngit commit -m \"Git LFS commit\" #添加大文件上传的说明\ngit push origin master #上传大文件\n```\n\n---\n\n### Github获取开源项目\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. Fork**\n\n**2. 修改文件**\n\ncommit changes\n\n**3. 提交修改**\n\n菜单pull request， 点击New pull request， create pull request\n\n**4. 项目创建人收到 Pull request**\n\nMerge pull request，confirm merge\n\n---\n\n### Github  Pages制作网站\n\n**1. 创建仓库**\n\n登录Github， 创建仓库名为username.github.io\n\n注意：username必须与你的用户名完全匹配\n\n**2. 创建网站**\n\n勾选Add a README file\n\n**3. 添加网站模板**\n\n点击setting， 找到Github pages， 点击choose a theme， 选择模板\n\n**4. 保存网站**\n\n点击commit changes\n\n---\n\n### Github+ Gridea建设网站\n\n**1. 下载Gridea客户端**\n\nhttps://gridea.dev/\n\n**2. 获取个人访问令牌**\n\n点击Github头像， 点击Setting， 进入Develper settings，进入Personal access tokens\n，生成新token， 输入Github密码， 输入token名称， 选择范围全部打勾，生成令牌\n\n保存好token: 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\n\n**3. Gridea与Github建立连接**\n\n点击远程， 输入Github域名， 仓库名称， 分支默认， Github用户名， Github用户名， Github邮箱\n\n保存， 检测远程连接， 成功后点击同步，检查Github仓库是否多出一些文件夹。\n\n**4. 美化网站**\n\n选择主题，网站相关信息更新\n\nhttps://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7\n\n\n```python\nhttps://www.bilibili.com/video/BV1ME41147bv/?spm_id_from=333.788.recommend_more_video.-1\n```\n\n### 提高Github访问速度\n\n**1. 修改hosts**\n\n\n```python\nWindows hosts目录：C:\\windows\\system32\\drivers\\etc\\\n    \n# Github\n192.30.253.113 github.com\n151.101.185.194 github.global.ssl.fastly.net\n203.98.7.65 gist.github.com\n13.229.189.0 codeload.github.com\n185.199.109.153 desktop.github.com \n185.199.108.153 guides.github.com  \n185.199.108.153 blog.github.com\n18.204.240.114 status.github.com\n185.199.108.153 developer.github.com\n185.199.108.153 services.github.com\n192.30.253.175 enterprise.github.com   \n34.195.49.195 education.github.com    \n185.199.108.153 pages.github.com  \n34.196.237.103 classroom.github.com\n```\n\n**2. 刷新DNS网页缓存**\n\nDNS网页缓存刷新CMD指令：ipconfig /flushdns\n\n\n```python\nhttps://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7\n```\n","source":"_posts/Git & GitHub使用指南.md","raw":"---\ntitle: Git & GitHub使用指南\n---\n\n---\n\n#### 介绍\n\n**1. Git & GitHub的发展历史**\n\nLinux 之父 Linus 在 1991 年创建开源的 Linux 操作系统之后，Linus 花了十天时间用 C 语言写好了一个开源的版本控制系统（Version Control System），就是著名的 Git。\n\n\n2007 年旧金山三个年轻人觉得 Git 是个好东西，就搞了一个公司名字叫 GitHub，第二年上线了使用 Ruby 编写的同名网站 GitHub，这是一个基于 Git 的免费代码托管网站（有付费服务）\n\nGithub被微软收购\n\n---\n\n### Github Desk简单操作\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. 下载安装Github**\n\nhttps://desktop.github.com/\n\n**2. 注册账号**\n\nhttps://github.com/\n\n**3. 新建项目** \n\n启动Github，菜单栏File，选择 New repository，\n\n填写Name，选择Local path\n\n**4. 文件夹更新项目内容** \n\n提交Summit\n\n**5. 发布项目** \n\n菜单栏New repository，选择Push \n\n---\n\n### Git简单操作\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. Start a project**\n\n登录Github，https://github.com/， 点击Start a project\n\n**2. Create a new repository**\n\n填写Repository name，选择Public/Private， 点击Create Repository\n\n**3. 获取链接**\n\nhttps://github.com/sheldonyue/machineLearning.git\n\n---\n\n**4. 下载安装Git**\n\nhttps://git-scm.com/\n默认设置，一路Next\n\n**5. 检查Git安装**\n\n打开终端Command Prompt，输入git version\n\n**6. 创建项目**\n\ncd 项目路径 \n如：D:\\AI\\03RNN\\AI-Writer-project\n\n**7. 配置Git**\n\ngit config --global user.name 'sheldonyue' \n\ngit config --global user.email 'sheldonyue@sina.com'\n\n**7. 检查配置**\n\ngit config -l\n\n查看最后两行name 和 email\n\n---\n\n**8. 初始化本地仓库**\n\ngit init\n\n**9. 关联远端Git仓库**\n\ngit remote add origin https://github.com/sheldonyue/machineLearning.git\n\n查看最后两行name 和 email\n\n**10. 查看本地项目文件夹变化**\n\ngit status\n\n**11. 更新本地Git项目**\n\ngit add *\n\ngit commit -m \"first commit\"\n\n！注意：必须用双引号\n\n**12. 推送到远端**\n\ngit push -u origin master\n\n说明：推送小于100MB的项目\n\n---\n\n### Git-LFS上传大文件\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. 下载文件**\n\n\n```python\nhttps://git-lfs.github.com/\n```\n\n**2. 安装到git目录下**\n\n\n```python\nC:\\Program Files\\Git\\bin\\Git LFS\n```\n\n**3. 上传大文件**\n\n\n```python\ngit init #创建本地仓库环境\ngit lfs install #安装大文件上传应用\ngit lfs track * #追踪要上传的大文件，*表示路径下的所有文件\ngit add .gitattributes #添加先上传的属性文件(要先上传属性文件，不然有可能失败)\ngit commit -m \"pre\" #添加属性文件上传的说明\ngit remote add origin https://github.com/Youpeng-Zhang/MOP.git #建立本地和Github仓库的链接\ngit push origin master #上传属性文件\ngit add * #添加要上传的大文件，*表示路径下的所有文件\ngit commit -m \"Git LFS commit\" #添加大文件上传的说明\ngit push origin master #上传大文件\n```\n\n---\n\n### Github获取开源项目\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：\n\n**1. Fork**\n\n**2. 修改文件**\n\ncommit changes\n\n**3. 提交修改**\n\n菜单pull request， 点击New pull request， create pull request\n\n**4. 项目创建人收到 Pull request**\n\nMerge pull request，confirm merge\n\n---\n\n### Github  Pages制作网站\n\n**1. 创建仓库**\n\n登录Github， 创建仓库名为username.github.io\n\n注意：username必须与你的用户名完全匹配\n\n**2. 创建网站**\n\n勾选Add a README file\n\n**3. 添加网站模板**\n\n点击setting， 找到Github pages， 点击choose a theme， 选择模板\n\n**4. 保存网站**\n\n点击commit changes\n\n---\n\n### Github+ Gridea建设网站\n\n**1. 下载Gridea客户端**\n\nhttps://gridea.dev/\n\n**2. 获取个人访问令牌**\n\n点击Github头像， 点击Setting， 进入Develper settings，进入Personal access tokens\n，生成新token， 输入Github密码， 输入token名称， 选择范围全部打勾，生成令牌\n\n保存好token: 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\n\n**3. Gridea与Github建立连接**\n\n点击远程， 输入Github域名， 仓库名称， 分支默认， Github用户名， Github用户名， Github邮箱\n\n保存， 检测远程连接， 成功后点击同步，检查Github仓库是否多出一些文件夹。\n\n**4. 美化网站**\n\n选择主题，网站相关信息更新\n\nhttps://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7\n\n\n```python\nhttps://www.bilibili.com/video/BV1ME41147bv/?spm_id_from=333.788.recommend_more_video.-1\n```\n\n### 提高Github访问速度\n\n**1. 修改hosts**\n\n\n```python\nWindows hosts目录：C:\\windows\\system32\\drivers\\etc\\\n    \n# Github\n192.30.253.113 github.com\n151.101.185.194 github.global.ssl.fastly.net\n203.98.7.65 gist.github.com\n13.229.189.0 codeload.github.com\n185.199.109.153 desktop.github.com \n185.199.108.153 guides.github.com  \n185.199.108.153 blog.github.com\n18.204.240.114 status.github.com\n185.199.108.153 developer.github.com\n185.199.108.153 services.github.com\n192.30.253.175 enterprise.github.com   \n34.195.49.195 education.github.com    \n185.199.108.153 pages.github.com  \n34.196.237.103 classroom.github.com\n```\n\n**2. 刷新DNS网页缓存**\n\nDNS网页缓存刷新CMD指令：ipconfig /flushdns\n\n\n```python\nhttps://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7\n```\n","slug":"Git & GitHub使用指南","published":1,"date":"2022-04-25T16:33:35.774Z","updated":"2022-04-25T16:33:35.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2gblmht000318td87w2arzq","content":"<hr>\n<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p><strong>1. Git &amp; GitHub的发展历史</strong></p>\n<p>Linux 之父 Linus 在 1991 年创建开源的 Linux 操作系统之后，Linus 花了十天时间用 C 语言写好了一个开源的版本控制系统（Version Control System），就是著名的 Git。</p>\n<p>2007 年旧金山三个年轻人觉得 Git 是个好东西，就搞了一个公司名字叫 GitHub，第二年上线了使用 Ruby 编写的同名网站 GitHub，这是一个基于 Git 的免费代码托管网站（有付费服务）</p>\n<p>Github被微软收购</p>\n<hr>\n<h3 id=\"Github-Desk简单操作\"><a href=\"#Github-Desk简单操作\" class=\"headerlink\" title=\"Github Desk简单操作\"></a>Github Desk简单操作</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. 下载安装Github</strong></p>\n<p><a href=\"https://desktop.github.com/\">https://desktop.github.com/</a></p>\n<p><strong>2. 注册账号</strong></p>\n<p><a href=\"https://github.com/\">https://github.com/</a></p>\n<p><strong>3. 新建项目</strong> </p>\n<p>启动Github，菜单栏File，选择 New repository，</p>\n<p>填写Name，选择Local path</p>\n<p><strong>4. 文件夹更新项目内容</strong> </p>\n<p>提交Summit</p>\n<p><strong>5. 发布项目</strong> </p>\n<p>菜单栏New repository，选择Push </p>\n<hr>\n<h3 id=\"Git简单操作\"><a href=\"#Git简单操作\" class=\"headerlink\" title=\"Git简单操作\"></a>Git简单操作</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. Start a project</strong></p>\n<p>登录Github，<a href=\"https://github.com/%EF%BC%8C\">https://github.com/，</a> 点击Start a project</p>\n<p><strong>2. Create a new repository</strong></p>\n<p>填写Repository name，选择Public/Private， 点击Create Repository</p>\n<p><strong>3. 获取链接</strong></p>\n<p><a href=\"https://github.com/sheldonyue/machineLearning.git\">https://github.com/sheldonyue/machineLearning.git</a></p>\n<hr>\n<p><strong>4. 下载安装Git</strong></p>\n<p><a href=\"https://git-scm.com/\">https://git-scm.com/</a><br>默认设置，一路Next</p>\n<p><strong>5. 检查Git安装</strong></p>\n<p>打开终端Command Prompt，输入git version</p>\n<p><strong>6. 创建项目</strong></p>\n<p>cd 项目路径<br>如：D:\\AI\\03RNN\\AI-Writer-project</p>\n<p><strong>7. 配置Git</strong></p>\n<p>git config –global user.name ‘sheldonyue’ </p>\n<p>git config –global user.email ‘<a href=\"mailto:&#x73;&#104;&#x65;&#x6c;&#x64;&#111;&#110;&#x79;&#117;&#x65;&#x40;&#115;&#x69;&#x6e;&#97;&#x2e;&#99;&#111;&#x6d;\">&#x73;&#104;&#x65;&#x6c;&#x64;&#111;&#110;&#x79;&#117;&#x65;&#x40;&#115;&#x69;&#x6e;&#97;&#x2e;&#99;&#111;&#x6d;</a>‘</p>\n<p><strong>7. 检查配置</strong></p>\n<p>git config -l</p>\n<p>查看最后两行name 和 email</p>\n<hr>\n<p><strong>8. 初始化本地仓库</strong></p>\n<p>git init</p>\n<p><strong>9. 关联远端Git仓库</strong></p>\n<p>git remote add origin <a href=\"https://github.com/sheldonyue/machineLearning.git\">https://github.com/sheldonyue/machineLearning.git</a></p>\n<p>查看最后两行name 和 email</p>\n<p><strong>10. 查看本地项目文件夹变化</strong></p>\n<p>git status</p>\n<p><strong>11. 更新本地Git项目</strong></p>\n<p>git add *</p>\n<p>git commit -m “first commit”</p>\n<p>！注意：必须用双引号</p>\n<p><strong>12. 推送到远端</strong></p>\n<p>git push -u origin master</p>\n<p>说明：推送小于100MB的项目</p>\n<hr>\n<h3 id=\"Git-LFS上传大文件\"><a href=\"#Git-LFS上传大文件\" class=\"headerlink\" title=\"Git-LFS上传大文件\"></a>Git-LFS上传大文件</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. 下载文件</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://git-lfs.github.com/</span><br></pre></td></tr></table></figure>\n\n<p><strong>2. 安装到git目录下</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Program Files\\Git\\<span class=\"built_in\">bin</span>\\Git LFS</span><br></pre></td></tr></table></figure>\n\n<p><strong>3. 上传大文件</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init <span class=\"comment\">#创建本地仓库环境</span></span><br><span class=\"line\">git lfs install <span class=\"comment\">#安装大文件上传应用</span></span><br><span class=\"line\">git lfs track * <span class=\"comment\">#追踪要上传的大文件，*表示路径下的所有文件</span></span><br><span class=\"line\">git add .gitattributes <span class=\"comment\">#添加先上传的属性文件(要先上传属性文件，不然有可能失败)</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;pre&quot;</span> <span class=\"comment\">#添加属性文件上传的说明</span></span><br><span class=\"line\">git remote add origin https://github.com/Youpeng-Zhang/MOP.git <span class=\"comment\">#建立本地和Github仓库的链接</span></span><br><span class=\"line\">git push origin master <span class=\"comment\">#上传属性文件</span></span><br><span class=\"line\">git add * <span class=\"comment\">#添加要上传的大文件，*表示路径下的所有文件</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Git LFS commit&quot;</span> <span class=\"comment\">#添加大文件上传的说明</span></span><br><span class=\"line\">git push origin master <span class=\"comment\">#上传大文件</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"Github获取开源项目\"><a href=\"#Github获取开源项目\" class=\"headerlink\" title=\"Github获取开源项目\"></a>Github获取开源项目</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. Fork</strong></p>\n<p><strong>2. 修改文件</strong></p>\n<p>commit changes</p>\n<p><strong>3. 提交修改</strong></p>\n<p>菜单pull request， 点击New pull request， create pull request</p>\n<p><strong>4. 项目创建人收到 Pull request</strong></p>\n<p>Merge pull request，confirm merge</p>\n<hr>\n<h3 id=\"Github-Pages制作网站\"><a href=\"#Github-Pages制作网站\" class=\"headerlink\" title=\"Github  Pages制作网站\"></a>Github  Pages制作网站</h3><p><strong>1. 创建仓库</strong></p>\n<p>登录Github， 创建仓库名为username.github.io</p>\n<p>注意：username必须与你的用户名完全匹配</p>\n<p><strong>2. 创建网站</strong></p>\n<p>勾选Add a README file</p>\n<p><strong>3. 添加网站模板</strong></p>\n<p>点击setting， 找到Github pages， 点击choose a theme， 选择模板</p>\n<p><strong>4. 保存网站</strong></p>\n<p>点击commit changes</p>\n<hr>\n<h3 id=\"Github-Gridea建设网站\"><a href=\"#Github-Gridea建设网站\" class=\"headerlink\" title=\"Github+ Gridea建设网站\"></a>Github+ Gridea建设网站</h3><p><strong>1. 下载Gridea客户端</strong></p>\n<p><a href=\"https://gridea.dev/\">https://gridea.dev/</a></p>\n<p><strong>2. 获取个人访问令牌</strong></p>\n<p>点击Github头像， 点击Setting， 进入Develper settings，进入Personal access tokens<br>，生成新token， 输入Github密码， 输入token名称， 选择范围全部打勾，生成令牌</p>\n<p>保存好token: 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</p>\n<p><strong>3. Gridea与Github建立连接</strong></p>\n<p>点击远程， 输入Github域名， 仓库名称， 分支默认， Github用户名， Github用户名， Github邮箱</p>\n<p>保存， 检测远程连接， 成功后点击同步，检查Github仓库是否多出一些文件夹。</p>\n<p><strong>4. 美化网站</strong></p>\n<p>选择主题，网站相关信息更新</p>\n<p><a href=\"https://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7\">https://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.bilibili.com/video/BV1ME41147bv/?spm_id_from=<span class=\"number\">333.788</span>.recommend_more_video.-<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"提高Github访问速度\"><a href=\"#提高Github访问速度\" class=\"headerlink\" title=\"提高Github访问速度\"></a>提高Github访问速度</h3><p><strong>1. 修改hosts</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows hosts目录：C:\\windows\\system32\\drivers\\etc\\</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># Github</span></span><br><span class=\"line\"><span class=\"number\">192.30</span><span class=\"number\">.253</span><span class=\"number\">.113</span> github.com</span><br><span class=\"line\"><span class=\"number\">151.101</span><span class=\"number\">.185</span><span class=\"number\">.194</span> github.<span class=\"keyword\">global</span>.ssl.fastly.net</span><br><span class=\"line\"><span class=\"number\">203.98</span><span class=\"number\">.7</span><span class=\"number\">.65</span> gist.github.com</span><br><span class=\"line\"><span class=\"number\">13.229</span><span class=\"number\">.189</span><span class=\"number\">.0</span> codeload.github.com</span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.109</span><span class=\"number\">.153</span> desktop.github.com </span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> guides.github.com  </span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> blog.github.com</span><br><span class=\"line\"><span class=\"number\">18.204</span><span class=\"number\">.240</span><span class=\"number\">.114</span> status.github.com</span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> developer.github.com</span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> services.github.com</span><br><span class=\"line\"><span class=\"number\">192.30</span><span class=\"number\">.253</span><span class=\"number\">.175</span> enterprise.github.com   </span><br><span class=\"line\"><span class=\"number\">34.195</span><span class=\"number\">.49</span><span class=\"number\">.195</span> education.github.com    </span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> pages.github.com  </span><br><span class=\"line\"><span class=\"number\">34.196</span><span class=\"number\">.237</span><span class=\"number\">.103</span> classroom.github.com</span><br></pre></td></tr></table></figure>\n\n<p><strong>2. 刷新DNS网页缓存</strong></p>\n<p>DNS网页缓存刷新CMD指令：ipconfig /flushdns</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=<span class=\"number\">333.788</span>.recommend_more_video<span class=\"number\">.7</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p><strong>1. Git &amp; GitHub的发展历史</strong></p>\n<p>Linux 之父 Linus 在 1991 年创建开源的 Linux 操作系统之后，Linus 花了十天时间用 C 语言写好了一个开源的版本控制系统（Version Control System），就是著名的 Git。</p>\n<p>2007 年旧金山三个年轻人觉得 Git 是个好东西，就搞了一个公司名字叫 GitHub，第二年上线了使用 Ruby 编写的同名网站 GitHub，这是一个基于 Git 的免费代码托管网站（有付费服务）</p>\n<p>Github被微软收购</p>\n<hr>\n<h3 id=\"Github-Desk简单操作\"><a href=\"#Github-Desk简单操作\" class=\"headerlink\" title=\"Github Desk简单操作\"></a>Github Desk简单操作</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. 下载安装Github</strong></p>\n<p><a href=\"https://desktop.github.com/\">https://desktop.github.com/</a></p>\n<p><strong>2. 注册账号</strong></p>\n<p><a href=\"https://github.com/\">https://github.com/</a></p>\n<p><strong>3. 新建项目</strong> </p>\n<p>启动Github，菜单栏File，选择 New repository，</p>\n<p>填写Name，选择Local path</p>\n<p><strong>4. 文件夹更新项目内容</strong> </p>\n<p>提交Summit</p>\n<p><strong>5. 发布项目</strong> </p>\n<p>菜单栏New repository，选择Push </p>\n<hr>\n<h3 id=\"Git简单操作\"><a href=\"#Git简单操作\" class=\"headerlink\" title=\"Git简单操作\"></a>Git简单操作</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. Start a project</strong></p>\n<p>登录Github，<a href=\"https://github.com/%EF%BC%8C\">https://github.com/，</a> 点击Start a project</p>\n<p><strong>2. Create a new repository</strong></p>\n<p>填写Repository name，选择Public/Private， 点击Create Repository</p>\n<p><strong>3. 获取链接</strong></p>\n<p><a href=\"https://github.com/sheldonyue/machineLearning.git\">https://github.com/sheldonyue/machineLearning.git</a></p>\n<hr>\n<p><strong>4. 下载安装Git</strong></p>\n<p><a href=\"https://git-scm.com/\">https://git-scm.com/</a><br>默认设置，一路Next</p>\n<p><strong>5. 检查Git安装</strong></p>\n<p>打开终端Command Prompt，输入git version</p>\n<p><strong>6. 创建项目</strong></p>\n<p>cd 项目路径<br>如：D:\\AI\\03RNN\\AI-Writer-project</p>\n<p><strong>7. 配置Git</strong></p>\n<p>git config –global user.name ‘sheldonyue’ </p>\n<p>git config –global user.email ‘<a href=\"mailto:&#x73;&#104;&#x65;&#x6c;&#x64;&#111;&#110;&#x79;&#117;&#x65;&#x40;&#115;&#x69;&#x6e;&#97;&#x2e;&#99;&#111;&#x6d;\">&#x73;&#104;&#x65;&#x6c;&#x64;&#111;&#110;&#x79;&#117;&#x65;&#x40;&#115;&#x69;&#x6e;&#97;&#x2e;&#99;&#111;&#x6d;</a>‘</p>\n<p><strong>7. 检查配置</strong></p>\n<p>git config -l</p>\n<p>查看最后两行name 和 email</p>\n<hr>\n<p><strong>8. 初始化本地仓库</strong></p>\n<p>git init</p>\n<p><strong>9. 关联远端Git仓库</strong></p>\n<p>git remote add origin <a href=\"https://github.com/sheldonyue/machineLearning.git\">https://github.com/sheldonyue/machineLearning.git</a></p>\n<p>查看最后两行name 和 email</p>\n<p><strong>10. 查看本地项目文件夹变化</strong></p>\n<p>git status</p>\n<p><strong>11. 更新本地Git项目</strong></p>\n<p>git add *</p>\n<p>git commit -m “first commit”</p>\n<p>！注意：必须用双引号</p>\n<p><strong>12. 推送到远端</strong></p>\n<p>git push -u origin master</p>\n<p>说明：推送小于100MB的项目</p>\n<hr>\n<h3 id=\"Git-LFS上传大文件\"><a href=\"#Git-LFS上传大文件\" class=\"headerlink\" title=\"Git-LFS上传大文件\"></a>Git-LFS上传大文件</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. 下载文件</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://git-lfs.github.com/</span><br></pre></td></tr></table></figure>\n\n<p><strong>2. 安装到git目录下</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Program Files\\Git\\<span class=\"built_in\">bin</span>\\Git LFS</span><br></pre></td></tr></table></figure>\n\n<p><strong>3. 上传大文件</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init <span class=\"comment\">#创建本地仓库环境</span></span><br><span class=\"line\">git lfs install <span class=\"comment\">#安装大文件上传应用</span></span><br><span class=\"line\">git lfs track * <span class=\"comment\">#追踪要上传的大文件，*表示路径下的所有文件</span></span><br><span class=\"line\">git add .gitattributes <span class=\"comment\">#添加先上传的属性文件(要先上传属性文件，不然有可能失败)</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;pre&quot;</span> <span class=\"comment\">#添加属性文件上传的说明</span></span><br><span class=\"line\">git remote add origin https://github.com/Youpeng-Zhang/MOP.git <span class=\"comment\">#建立本地和Github仓库的链接</span></span><br><span class=\"line\">git push origin master <span class=\"comment\">#上传属性文件</span></span><br><span class=\"line\">git add * <span class=\"comment\">#添加要上传的大文件，*表示路径下的所有文件</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Git LFS commit&quot;</span> <span class=\"comment\">#添加大文件上传的说明</span></span><br><span class=\"line\">git push origin master <span class=\"comment\">#上传大文件</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"Github获取开源项目\"><a href=\"#Github获取开源项目\" class=\"headerlink\" title=\"Github获取开源项目\"></a>Github获取开源项目</h3><p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学步骤</i>：</p>\n<p><strong>1. Fork</strong></p>\n<p><strong>2. 修改文件</strong></p>\n<p>commit changes</p>\n<p><strong>3. 提交修改</strong></p>\n<p>菜单pull request， 点击New pull request， create pull request</p>\n<p><strong>4. 项目创建人收到 Pull request</strong></p>\n<p>Merge pull request，confirm merge</p>\n<hr>\n<h3 id=\"Github-Pages制作网站\"><a href=\"#Github-Pages制作网站\" class=\"headerlink\" title=\"Github  Pages制作网站\"></a>Github  Pages制作网站</h3><p><strong>1. 创建仓库</strong></p>\n<p>登录Github， 创建仓库名为username.github.io</p>\n<p>注意：username必须与你的用户名完全匹配</p>\n<p><strong>2. 创建网站</strong></p>\n<p>勾选Add a README file</p>\n<p><strong>3. 添加网站模板</strong></p>\n<p>点击setting， 找到Github pages， 点击choose a theme， 选择模板</p>\n<p><strong>4. 保存网站</strong></p>\n<p>点击commit changes</p>\n<hr>\n<h3 id=\"Github-Gridea建设网站\"><a href=\"#Github-Gridea建设网站\" class=\"headerlink\" title=\"Github+ Gridea建设网站\"></a>Github+ Gridea建设网站</h3><p><strong>1. 下载Gridea客户端</strong></p>\n<p><a href=\"https://gridea.dev/\">https://gridea.dev/</a></p>\n<p><strong>2. 获取个人访问令牌</strong></p>\n<p>点击Github头像， 点击Setting， 进入Develper settings，进入Personal access tokens<br>，生成新token， 输入Github密码， 输入token名称， 选择范围全部打勾，生成令牌</p>\n<p>保存好token: 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</p>\n<p><strong>3. Gridea与Github建立连接</strong></p>\n<p>点击远程， 输入Github域名， 仓库名称， 分支默认， Github用户名， Github用户名， Github邮箱</p>\n<p>保存， 检测远程连接， 成功后点击同步，检查Github仓库是否多出一些文件夹。</p>\n<p><strong>4. 美化网站</strong></p>\n<p>选择主题，网站相关信息更新</p>\n<p><a href=\"https://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7\">https://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=333.788.recommend_more_video.7</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.bilibili.com/video/BV1ME41147bv/?spm_id_from=<span class=\"number\">333.788</span>.recommend_more_video.-<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"提高Github访问速度\"><a href=\"#提高Github访问速度\" class=\"headerlink\" title=\"提高Github访问速度\"></a>提高Github访问速度</h3><p><strong>1. 修改hosts</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows hosts目录：C:\\windows\\system32\\drivers\\etc\\</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># Github</span></span><br><span class=\"line\"><span class=\"number\">192.30</span><span class=\"number\">.253</span><span class=\"number\">.113</span> github.com</span><br><span class=\"line\"><span class=\"number\">151.101</span><span class=\"number\">.185</span><span class=\"number\">.194</span> github.<span class=\"keyword\">global</span>.ssl.fastly.net</span><br><span class=\"line\"><span class=\"number\">203.98</span><span class=\"number\">.7</span><span class=\"number\">.65</span> gist.github.com</span><br><span class=\"line\"><span class=\"number\">13.229</span><span class=\"number\">.189</span><span class=\"number\">.0</span> codeload.github.com</span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.109</span><span class=\"number\">.153</span> desktop.github.com </span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> guides.github.com  </span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> blog.github.com</span><br><span class=\"line\"><span class=\"number\">18.204</span><span class=\"number\">.240</span><span class=\"number\">.114</span> status.github.com</span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> developer.github.com</span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> services.github.com</span><br><span class=\"line\"><span class=\"number\">192.30</span><span class=\"number\">.253</span><span class=\"number\">.175</span> enterprise.github.com   </span><br><span class=\"line\"><span class=\"number\">34.195</span><span class=\"number\">.49</span><span class=\"number\">.195</span> education.github.com    </span><br><span class=\"line\"><span class=\"number\">185.199</span><span class=\"number\">.108</span><span class=\"number\">.153</span> pages.github.com  </span><br><span class=\"line\"><span class=\"number\">34.196</span><span class=\"number\">.237</span><span class=\"number\">.103</span> classroom.github.com</span><br></pre></td></tr></table></figure>\n\n<p><strong>2. 刷新DNS网页缓存</strong></p>\n<p>DNS网页缓存刷新CMD指令：ipconfig /flushdns</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.bilibili.com/video/BV1Fb4y1Y7e4/?spm_id_from=<span class=\"number\">333.788</span>.recommend_more_video<span class=\"number\">.7</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Blog模板 | NumPy 百题大冲关｜学习版","data":null,"tage":"Github","_content":"\n---\n\n#### 介绍\n\nNumPy 是 Python 语言的一个第三方库，其支持大量高维度数组与矩阵运算。此外，NumPy 也针对数组运算提供大量的数学函数。机器学习涉及到大量对数组的变换和运算，NumPy 就成了必不可少的工具之一。NumPy 百题大冲关分为基础篇和进阶篇，每部分各有 50 道练习题。基础部分的练习题在于熟悉 NumPy 常用方法的使用，而进阶部分则侧重于 NumPy 方法的组合应用。\n\n---\n\n<div class=\"alert alert-info\"><p>本次实验为 Notebook 实验，前后单元格之间有关联性，你需要按顺序执行单元格，跳跃或重复执行部分单元格可能会造成赋值混乱。</p></div>\n\n### 基础部分\n\n练习 NumPy 之前，首先需要导入 NumPy 模块，并约定简称为 `np`。\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学代码</i>：\n\n**1. 导入 NumPy：**\n\n\n```python\nimport numpy as np\n```\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 动手练习</i>｜如果你对课程所使用的蓝桥云课 Notebook 在线环境并不熟悉，可以先学习\n[<i class=\"fa fa-external-link-square\" aria-hidden=\"true\"> 使用指南课程</i>](https://www.lanqiao.cn/courses/1322)。\n\n### 创建数组\n\nMin-Max 标准化公式：\n\n$$Y = \\frac{Z-\\min(Z)}{\\max(Z)-\\min(Z)}$$\n\n\n```python\n# 根据公式定义函数\ndef l2_normalize(v, axis=-1, order=2):\n    l2 = np.linalg.norm(v, ord=order, axis=axis, keepdims=True)\n    l2[l2 == 0] = 1\n    return v/l2\n\n# 生成随机数据\nZ = np.random.randint(10, size=(5, 5))\nprint(Z)\n\nl2_normalize(Z)\n```\n\n    [[4 0 9 4 1]\n     [7 5 9 8 0]\n     [7 6 6 7 7]\n     [6 8 3 4 2]\n     [4 5 1 2 8]]\n    \n\n\n\n\n    array([[0.37463432, 0.        , 0.84292723, 0.37463432, 0.09365858],\n           [0.47301616, 0.33786869, 0.60816364, 0.5405899 , 0.        ],\n           [0.47301616, 0.40544243, 0.40544243, 0.47301616, 0.47301616],\n           [0.52827054, 0.70436073, 0.26413527, 0.35218036, 0.17609018],\n           [0.38138504, 0.47673129, 0.09534626, 0.19069252, 0.76277007]])\n\n\n\n\n```python\nZ = np.array([\n    [1, 2, 1, 9, 10, 3, 2, 6, 7],  # 特征 A\n    [2, 1, 8, 3, 7, 5, 10, 7, 2],  # 特征 B\n    [2, 1, 1, 8, 9, 4, 3, 5, 7]])  # 特征 C\n\nnp.corrcoef(Z)\n```\n\n\n\n\n    array([[ 1.        , -0.05640533,  0.97094584],\n           [-0.05640533,  1.        , -0.01315587],\n           [ 0.97094584, -0.01315587,  1.        ]])\n\n\n\n<div style=\"font-size:14px; line-height:17px;\" class=\"hljs\">\n         [A]     [B]     [C]\narray([[ 1.  , -0.06,  0.97]   [A]\n       [-0.06,  1.  , -0.01],  [B]\n       [ 0.97, -0.01,  1.  ]]) [C]\n</div>\n\n<hr><div style=\"color: #999; font-size: 12px;\"><i class=\"fa fa-copyright\" aria-hidden=\"true\"> 本课程内容版权归蓝桥云课所有，禁止转载、下载及非法传播。实验中少量题目编译自：<a href=\"https://github.com/rougier/numpy-100\">100 numpy exercises</a></i></div>\n\n\n```python\n\n```\n","source":"_posts/NumPy 百题大冲关｜学习版.md","raw":"---\ntitle: Blog模板 | NumPy 百题大冲关｜学习版\ndata: \ntage: Github\n---\n\n---\n\n#### 介绍\n\nNumPy 是 Python 语言的一个第三方库，其支持大量高维度数组与矩阵运算。此外，NumPy 也针对数组运算提供大量的数学函数。机器学习涉及到大量对数组的变换和运算，NumPy 就成了必不可少的工具之一。NumPy 百题大冲关分为基础篇和进阶篇，每部分各有 50 道练习题。基础部分的练习题在于熟悉 NumPy 常用方法的使用，而进阶部分则侧重于 NumPy 方法的组合应用。\n\n---\n\n<div class=\"alert alert-info\"><p>本次实验为 Notebook 实验，前后单元格之间有关联性，你需要按顺序执行单元格，跳跃或重复执行部分单元格可能会造成赋值混乱。</p></div>\n\n### 基础部分\n\n练习 NumPy 之前，首先需要导入 NumPy 模块，并约定简称为 `np`。\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学代码</i>：\n\n**1. 导入 NumPy：**\n\n\n```python\nimport numpy as np\n```\n\n<i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 动手练习</i>｜如果你对课程所使用的蓝桥云课 Notebook 在线环境并不熟悉，可以先学习\n[<i class=\"fa fa-external-link-square\" aria-hidden=\"true\"> 使用指南课程</i>](https://www.lanqiao.cn/courses/1322)。\n\n### 创建数组\n\nMin-Max 标准化公式：\n\n$$Y = \\frac{Z-\\min(Z)}{\\max(Z)-\\min(Z)}$$\n\n\n```python\n# 根据公式定义函数\ndef l2_normalize(v, axis=-1, order=2):\n    l2 = np.linalg.norm(v, ord=order, axis=axis, keepdims=True)\n    l2[l2 == 0] = 1\n    return v/l2\n\n# 生成随机数据\nZ = np.random.randint(10, size=(5, 5))\nprint(Z)\n\nl2_normalize(Z)\n```\n\n    [[4 0 9 4 1]\n     [7 5 9 8 0]\n     [7 6 6 7 7]\n     [6 8 3 4 2]\n     [4 5 1 2 8]]\n    \n\n\n\n\n    array([[0.37463432, 0.        , 0.84292723, 0.37463432, 0.09365858],\n           [0.47301616, 0.33786869, 0.60816364, 0.5405899 , 0.        ],\n           [0.47301616, 0.40544243, 0.40544243, 0.47301616, 0.47301616],\n           [0.52827054, 0.70436073, 0.26413527, 0.35218036, 0.17609018],\n           [0.38138504, 0.47673129, 0.09534626, 0.19069252, 0.76277007]])\n\n\n\n\n```python\nZ = np.array([\n    [1, 2, 1, 9, 10, 3, 2, 6, 7],  # 特征 A\n    [2, 1, 8, 3, 7, 5, 10, 7, 2],  # 特征 B\n    [2, 1, 1, 8, 9, 4, 3, 5, 7]])  # 特征 C\n\nnp.corrcoef(Z)\n```\n\n\n\n\n    array([[ 1.        , -0.05640533,  0.97094584],\n           [-0.05640533,  1.        , -0.01315587],\n           [ 0.97094584, -0.01315587,  1.        ]])\n\n\n\n<div style=\"font-size:14px; line-height:17px;\" class=\"hljs\">\n         [A]     [B]     [C]\narray([[ 1.  , -0.06,  0.97]   [A]\n       [-0.06,  1.  , -0.01],  [B]\n       [ 0.97, -0.01,  1.  ]]) [C]\n</div>\n\n<hr><div style=\"color: #999; font-size: 12px;\"><i class=\"fa fa-copyright\" aria-hidden=\"true\"> 本课程内容版权归蓝桥云课所有，禁止转载、下载及非法传播。实验中少量题目编译自：<a href=\"https://github.com/rougier/numpy-100\">100 numpy exercises</a></i></div>\n\n\n```python\n\n```\n","slug":"NumPy 百题大冲关｜学习版","published":1,"date":"2022-04-26T01:00:21.482Z","updated":"2022-04-26T07:10:43.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2gblmik000518td093c4azc","content":"<hr>\n<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>NumPy 是 Python 语言的一个第三方库，其支持大量高维度数组与矩阵运算。此外，NumPy 也针对数组运算提供大量的数学函数。机器学习涉及到大量对数组的变换和运算，NumPy 就成了必不可少的工具之一。NumPy 百题大冲关分为基础篇和进阶篇，每部分各有 50 道练习题。基础部分的练习题在于熟悉 NumPy 常用方法的使用，而进阶部分则侧重于 NumPy 方法的组合应用。</p>\n<hr>\n<div class=\"alert alert-info\"><p>本次实验为 Notebook 实验，前后单元格之间有关联性，你需要按顺序执行单元格，跳跃或重复执行部分单元格可能会造成赋值混乱。</p></div>\n\n<h3 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h3><p>练习 NumPy 之前，首先需要导入 NumPy 模块，并约定简称为 <code>np</code>。</p>\n<p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学代码</i>：</p>\n<p><strong>1. 导入 NumPy：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br></pre></td></tr></table></figure>\n\n<p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 动手练习</i>｜如果你对课程所使用的蓝桥云课 Notebook 在线环境并不熟悉，可以先学习<br><a href=\"https://www.lanqiao.cn/courses/1322\"><i class=\"fa fa-external-link-square\" aria-hidden=\"true\"> 使用指南课程</i></a>。</p>\n<h3 id=\"创建数组\"><a href=\"#创建数组\" class=\"headerlink\" title=\"创建数组\"></a>创建数组</h3><p>Min-Max 标准化公式：</p>\n<p>$$Y = \\frac{Z-\\min(Z)}{\\max(Z)-\\min(Z)}$$</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 根据公式定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">l2_normalize</span>(<span class=\"params\">v, axis=-<span class=\"number\">1</span>, order=<span class=\"number\">2</span></span>):</span><br><span class=\"line\">    l2 = np.linalg.norm(v, <span class=\"built_in\">ord</span>=order, axis=axis, keepdims=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    l2[l2 == <span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> v/l2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成随机数据</span></span><br><span class=\"line\">Z = np.random.randint(<span class=\"number\">10</span>, size=(<span class=\"number\">5</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Z)</span><br><span class=\"line\"></span><br><span class=\"line\">l2_normalize(Z)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[4 0 9 4 1]\n [7 5 9 8 0]\n [7 6 6 7 7]\n [6 8 3 4 2]\n [4 5 1 2 8]]\n\n\n\n\n\narray([[0.37463432, 0.        , 0.84292723, 0.37463432, 0.09365858],\n       [0.47301616, 0.33786869, 0.60816364, 0.5405899 , 0.        ],\n       [0.47301616, 0.40544243, 0.40544243, 0.47301616, 0.47301616],\n       [0.52827054, 0.70436073, 0.26413527, 0.35218036, 0.17609018],\n       [0.38138504, 0.47673129, 0.09534626, 0.19069252, 0.76277007]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>],  <span class=\"comment\"># 特征 A</span></span><br><span class=\"line\">    [<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>],  <span class=\"comment\"># 特征 B</span></span><br><span class=\"line\">    [<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]])  <span class=\"comment\"># 特征 C</span></span><br><span class=\"line\"></span><br><span class=\"line\">np.corrcoef(Z)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[ 1.        , -0.05640533,  0.97094584],\n       [-0.05640533,  1.        , -0.01315587],\n       [ 0.97094584, -0.01315587,  1.        ]])\n</code></pre>\n<div style=\"font-size:14px; line-height:17px;\" class=\"hljs\">\n         [A]     [B]     [C]\narray([[ 1.  , -0.06,  0.97]   [A]\n       [-0.06,  1.  , -0.01],  [B]\n       [ 0.97, -0.01,  1.  ]]) [C]\n</div>\n\n<hr><div style=\"color: #999; font-size: 12px;\"><i class=\"fa fa-copyright\" aria-hidden=\"true\"> 本课程内容版权归蓝桥云课所有，禁止转载、下载及非法传播。实验中少量题目编译自：<a href=\"https://github.com/rougier/numpy-100\">100 numpy exercises</a></i></div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>NumPy 是 Python 语言的一个第三方库，其支持大量高维度数组与矩阵运算。此外，NumPy 也针对数组运算提供大量的数学函数。机器学习涉及到大量对数组的变换和运算，NumPy 就成了必不可少的工具之一。NumPy 百题大冲关分为基础篇和进阶篇，每部分各有 50 道练习题。基础部分的练习题在于熟悉 NumPy 常用方法的使用，而进阶部分则侧重于 NumPy 方法的组合应用。</p>\n<hr>\n<div class=\"alert alert-info\"><p>本次实验为 Notebook 实验，前后单元格之间有关联性，你需要按顺序执行单元格，跳跃或重复执行部分单元格可能会造成赋值混乱。</p></div>\n\n<h3 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h3><p>练习 NumPy 之前，首先需要导入 NumPy 模块，并约定简称为 <code>np</code>。</p>\n<p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 教学代码</i>：</p>\n<p><strong>1. 导入 NumPy：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br></pre></td></tr></table></figure>\n\n<p><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"> 动手练习</i>｜如果你对课程所使用的蓝桥云课 Notebook 在线环境并不熟悉，可以先学习<br><a href=\"https://www.lanqiao.cn/courses/1322\"><i class=\"fa fa-external-link-square\" aria-hidden=\"true\"> 使用指南课程</i></a>。</p>\n<h3 id=\"创建数组\"><a href=\"#创建数组\" class=\"headerlink\" title=\"创建数组\"></a>创建数组</h3><p>Min-Max 标准化公式：</p>\n<p>$$Y = \\frac{Z-\\min(Z)}{\\max(Z)-\\min(Z)}$$</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 根据公式定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">l2_normalize</span>(<span class=\"params\">v, axis=-<span class=\"number\">1</span>, order=<span class=\"number\">2</span></span>):</span><br><span class=\"line\">    l2 = np.linalg.norm(v, <span class=\"built_in\">ord</span>=order, axis=axis, keepdims=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    l2[l2 == <span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> v/l2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成随机数据</span></span><br><span class=\"line\">Z = np.random.randint(<span class=\"number\">10</span>, size=(<span class=\"number\">5</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Z)</span><br><span class=\"line\"></span><br><span class=\"line\">l2_normalize(Z)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[4 0 9 4 1]\n [7 5 9 8 0]\n [7 6 6 7 7]\n [6 8 3 4 2]\n [4 5 1 2 8]]\n\n\n\n\n\narray([[0.37463432, 0.        , 0.84292723, 0.37463432, 0.09365858],\n       [0.47301616, 0.33786869, 0.60816364, 0.5405899 , 0.        ],\n       [0.47301616, 0.40544243, 0.40544243, 0.47301616, 0.47301616],\n       [0.52827054, 0.70436073, 0.26413527, 0.35218036, 0.17609018],\n       [0.38138504, 0.47673129, 0.09534626, 0.19069252, 0.76277007]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>],  <span class=\"comment\"># 特征 A</span></span><br><span class=\"line\">    [<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>],  <span class=\"comment\"># 特征 B</span></span><br><span class=\"line\">    [<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]])  <span class=\"comment\"># 特征 C</span></span><br><span class=\"line\"></span><br><span class=\"line\">np.corrcoef(Z)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[ 1.        , -0.05640533,  0.97094584],\n       [-0.05640533,  1.        , -0.01315587],\n       [ 0.97094584, -0.01315587,  1.        ]])\n</code></pre>\n<div style=\"font-size:14px; line-height:17px;\" class=\"hljs\">\n         [A]     [B]     [C]\narray([[ 1.  , -0.06,  0.97]   [A]\n       [-0.06,  1.  , -0.01],  [B]\n       [ 0.97, -0.01,  1.  ]]) [C]\n</div>\n\n<hr><div style=\"color: #999; font-size: 12px;\"><i class=\"fa fa-copyright\" aria-hidden=\"true\"> 本课程内容版权归蓝桥云课所有，禁止转载、下载及非法传播。实验中少量题目编译自：<a href=\"https://github.com/rougier/numpy-100\">100 numpy exercises</a></i></div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}